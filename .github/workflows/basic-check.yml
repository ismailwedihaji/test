# name: Node.js CI/CD

# on:
#   push:
#     branches: [main]
#   pull_request:
#     branches: [main]

# jobs:
#   build-and-test:
#     runs-on: ubuntu-latest

#     services:
#       postgres:
#         image: postgres
#         env:
#           POSTGRES_USER: postgres
#           POSTGRES_PASSWORD: newpassword
#           POSTGRES_DB: myPostgres
#         ports:
#           - 5432:5432
#         options: >-
#           --health-cmd pg_isready
#           --health-interval 10s
#           --health-timeout 5s
#           --health-retries 5

#     steps:
#       - uses: actions/checkout@v2

#       - name: Set up Node.js
#         uses: actions/setup-node@v2
#         with:
#           node-version: "20"

#       - name: Install Server Dependencies
#         run: npm install
#         working-directory: ./server

#       - name: Wait for PostgreSQL to be ready
#         run: |
#           until pg_isready -h localhost -p 5432; do
#             echo "Waiting for PostgreSQL to be ready..."
#             sleep 2
#           done

#       - uses: actions/checkout@v2

#       - name: Set up Node.js with a specific version
#         uses: actions/setup-node@v2
#         with:
#           node-version: "20"

#       - name: Run Static Code Analysis (ESLint)
#         run: |
#           npm install eslint --save-dev
#           npx eslint . --ext .js,.jsx
#         working-directory: ./client



name: Node.js CI/CD

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: newpassword
          POSTGRES_DB: myPostgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "20"

      - name: Install Server Dependencies
        run: npm install
        working-directory: ./server

      - name: Wait for PostgreSQL to be ready
        run: |
          until pg_isready -h localhost -p 5432; do
            echo "Waiting for PostgreSQL to be ready..."
            sleep 2
          done

      - uses: actions/checkout@v2

      - name: Set up Node.js with a specific version
        uses: actions/setup-node@v2
        with:
          node-version: "20"

      - name: Run Static Code Analysis (ESLint)
        run: |
          npm install eslint --save-dev
          npx eslint . --ext .js,.jsx
        working-directory: ./client

  build-and-push-docker:
    needs: build-and-test
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker images for server
        uses: docker/build-push-action@v2
        with:
          context: ./server
          file: ./server/Dockerfile
          push: true
          tags: ghcr.io/serdar-b/iv1201-project/server:latest